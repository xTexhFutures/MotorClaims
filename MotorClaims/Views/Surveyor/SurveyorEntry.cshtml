@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Http.Features
@using System.Globalization

@inject IViewLocalizer _localizer
@using CORE.DTOs.MotorClaim.Claims;
@using Newtonsoft.Json;

@model ClaimMaster
@{
    List<LookupTable> lookupTables = (List<LookupTable>)ViewData["query"];
        string DocumentsLink=(string)ViewData["DocumentsLink"];
    await Html.RenderPartialAsync("_PolicyInfo",Model.productionInfo);
    await Html.RenderPartialAsync("_VehicleInfo", Model.vehiclesInfo);
    await Html.RenderPartialAsync("_ClaimInfo", Model.claims);
    await Html.RenderPartialAsync("_ClaimantInfo",new { Model = Model.claimants,Lookups = lookupTables});
    await Html.RenderPartialAsync("_DocumentsInfo",new { Model = Model.attachments, Link = DocumentsLink,ClaimNo=string.Concat(Model.claims.ClaimNo,"/",Model.claimants.Serial),Documents=Model.documentInfos});

}

<div class="transaction-details">
    <table class="universal-table">
        <tr>
            <!-- <th>#</th> -->
            <th>
                @_localizer["ClaimantType"].Value
                
            </th>
            <th>
                @_localizer["ClaimantName"].Value
                
            </th>
            <th>
                @_localizer["NatureofLoss"].Value
                
            </th>
            <th>
                @_localizer["Make"].Value
                
            </th>
            <th>
                @_localizer["Model"].Value
                
            </th>
            <th>
                @_localizer["Chassis"].Value
                
            </th>
            <th>
                @_localizer["PlateNo"].Value
                
            </th>
            <th>
                @_localizer["ClaimantStatus"].Value
                
            </th>

        </tr>



            <tr>
                @{
                 ClaimSearchobj   claimSearchobj = new ClaimSearchobj()
                {
                    PolicyId = Model.productionInfo.Id,
                    VehicleId = Model.vehiclesInfo.Id,
                    ClaimId = Model.claimants.ClaimId,
                    ClaimantId = Model.claimants.Id,
                    
                };
                    string ClaimantType = lookupTables.Where(p => p.Code == Model.claimants.ClaimantType.Value.ToString() && p.MajorCode==(int)Enums.Lookups.ClaimantType).FirstOrDefault().NameEnglish;
                    string ClaimantResult = lookupTables.Where(p => p.Code == Model.claimants.NatureofLoss.Value.ToString() && p.MajorCode==(int)Enums.Lookups.CauseOfLoss).FirstOrDefault().NameEnglish;
                }
                <td class="tran"><a onclick="LoadSurveyorList('@MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj))')">#@ClaimantType</a></td>
                <td>@Model.claimants.ClaimantName</td>
                <td>@ClaimantResult</td>
                <td>@Model.claimants.MakeDesc</td>
                <td>@Model.claimants.ModelDesc</td>
                <td>@Model.claimants.ChassisNo</td>
                <td>@Model.claimants.PlateNo</td>
                <td>@(((Enums.ClaimantStatus)Model.claimants.ClaimantStatus).ToString())</td>

            </tr>


        
    </table>
</div>


<div id="SurveyorEntry"></div>


<script>

    function LoadSurveyorList(Id){
        $('#SurveyorEntry').load('/Surveyor/LoadSurveyorsList/',{Id:Id});
    }

      function LoadSurveyorEntry(Id){
        $('#SurveyorEntry').load('/Surveyor/LoadSurveyorEntry/',{Id:Id});
    }  
    
    function LoadSurveyorMissing(Id){
        $('#SurveyorEntry').load('/Surveyor/LoadSurveyorMissing/',{Id:Id});
    }
</script>

