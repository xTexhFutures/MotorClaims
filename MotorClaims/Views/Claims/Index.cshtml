@using CORE.DTOs.APIs.MotorClaim;
@using CORE.DTOs.MotorClaim;
@using Newtonsoft.Json;
@{
    Production policy = (Production)ViewData["Policy"];
    VehicleInfos vehicle = (VehicleInfos)ViewData["Vehicle"];
}


<div class="policy-detail-wrapper">


    @{
        await Html.RenderPartialAsync("_PolicyInfo", policy.policy);
    }

    @{
        await Html.RenderPartialAsync("_VehicleInfo", vehicle.Vehicle);
    }

    @*   @{
    await Html.RenderPartialAsync("_ClaimInfo", vehicle);
    }
    @{
    await Html.RenderPartialAsync("_ClaimantInfo", vehicle);
    }*@




    <div class="search-member">
        <div class="search-heading-wrap">
            <div class="heading-card">
                <h2 class="heading">Claims List</h2>
            </div>
            @{
                ClaimSearchobj claimSearchobj = new ClaimSearchobj()
            {
                PolicyId = policy.policy.Id,
                VehicleId = vehicle.Vehicle.Id
            };
            }
            <a class="button button-secondary" href="@Url.Action("ClaimEntry","Claims",new{obj=MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj))})">Add Claim</a>

        </div>

    </div>

</div>
@if (vehicle.lsClaims.Count > 0)
{
    <div class="transaction-details">
        <table class="universal-table">
            <tr>
                <!-- <th>#</th> -->
                <th>Claim Segment</th>
                <th>Policy Type</th>
                <th>Policy Number</th>
                <th>Make</th>
                <th>Model</th>
                <th>Chassis</th>
                <th>Creation Date</th>
                <th>Claim Status</th>

            </tr>


            @foreach (var clm in vehicle.lsClaims)
            {

                <tr>
                    @{
                        claimSearchobj = new ClaimSearchobj()
                    {
                        PolicyId = policy.policy.Id,
                        VehicleId = vehicle.Vehicle.Id,
                        ClaimId = clm.Id
                    };
                    }
                    <td class="tran"><a href="@Url.Action("ClaimManagment","Claims",new{obj=MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj))})">#@clm.ClaimNo</a></td>
                    <td>@policy.policy.PolicyTypeName</td>
                    <td>@policy.policy.PolicyNumber</td>
                    <td>@vehicle.Vehicle.MakeDesc</td>
                    <td>@vehicle.Vehicle.ModelDesc</td>
                    <td>@vehicle.Vehicle.ChassisNo</td>
                    <td>@HelpersDate.FormatDateNoTime(clm.CreationDate.Value)</td>
                    @{
                        var y = Enum.TryParse(clm.ClaimStatus.ToString(), out MotorClaims.Models.Enums.ClaimStatus parsedEnumValue);
                    }
                    <td>@parsedEnumValue</td>

                </tr>


            }
        </table>
    </div>
}
else
{
    <div class="ui-state-highlight ui-corner-all" style="background:none !important;margin-top: 1%;">
        <span class="ui-icon ui-icon-info" style="float: left"></span>
        <span>No results found.</span>
    </div>
}





<!-- cancel policy driver no -->
