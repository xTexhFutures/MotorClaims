@using CORE.DTOs.MotorClaim.WorkFlow;
@{
    List<DelegationSetup> delegationSetups=(List<DelegationSetup>) ViewData["Delegations"];
    int? Filter = (int?)ViewData["Filter"];
}

    @{
        await Html.RenderPartialAsync("_ContentSection");
    }

        <div class="policy-wrapper">
            <h2 class="heading">Delegations Managment</h2>
            <div class="search-member">
        <form method="post" asp-action="SearchDelegations" asp-controller="Delegation">
                <div class="search-filter-wrapper">


                    <select class="common-dropdown" id="ddlFilter" name="Filter">
                        <option  value="" >Status</option>
                        <option value="1" >Active</option>
                        <option value="0">In-Active</option>
                   </select>

                    <div class="search-heading-wrap">

                        <button class="button button-secondary" type="submit">Search</button>
                    </div>


                </div>
        </form>
            </div>
        </div>


        <div class="transaction-details">
            <div class="search-heading-wrap" style="float: right;margin-bottom: 5px;">

                <button class="button button-secondary" onclick="UpdateDelegation(0)">Add Delegation</button>
            </div>
            <table class="universal-table">
                <tr>
                    <!-- <th>#</th> -->
                    <th>From</th>
                    <th>To</th>
                    <th>Delegated From </th>
                    <th>Delegated To</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
        @if (delegationSetups!=null)
        {
            foreach (var item in delegationSetups)
            {
                <tr>
                    <td class="tran" onclick="UpdateDelegation(@item.Id)">@item.From.ToString("dd-MMM-yyyy")</td>
                    <td>@item.To.ToString("dd-MMM-yyyy")</td>
                    <td>@item.DelegateFrom </td>
                    <td>@item.DelegateTo</td>
                    <td>
                        @if (DateTime.Now<item.To)
                        {
                            <span>Active</span>
                        }
                        else
                        {
                            <span>In-Active</span>
                        }
                    </td>
                    <td>
                        <div class="resubmit" style="padding-left:10px">
                            <button class="button button-delete-border" id="delet-Draft-Member" title="Delete" style="border: brown !important"
                                    onclick="openDeleteDelegation(@item.Id)">
                                <img class="btn-icon" src="/assets/icons/trash-can.svg" />
                            </button>
                        </div>
                    </td>
                </tr>
            }

        }

            </table>
        </div>



<div id="edit-Delegation-popup" class="edit-member-id-popup">
</div>
<div id="delete-Confirmation" class="delete-dependent-modal"></div>
<script>
    var element = document.getElementById("shad1");
    element.classList.add("Selected");
    $(function () {

        var filter='@Filter';
        if (filter.length>0) {
            $('#ddlFilter').val('@Filter');
        }
        if ('@ViewData["Error"]' != "" && '@ViewData["Error"]' != '') {
            ErrorAlert('@ViewData["Error"]');
        }
    })

</script>

