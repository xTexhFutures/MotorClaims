@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Http.Features
@using System.Globalization

@inject IViewLocalizer _localizer
@using CORE.DTOs.MotorClaim;
@using Newtonsoft.Json;

@{
    Layout = null;
    string obj = (string)ViewData["claimSearchobj"];
    List<Survoyer> survoyers=(List<Survoyer>)ViewData["survoyers"];
    long ClaimId=(long)ViewData["ClaimId"];
    int ClaimantId=(int)ViewData["ClaimantId"];
     Survoyer survoyer = new Survoyer()
                {
                    ClaimantId = ClaimantId,
                    ClaimId = ClaimId
                };
}


@if (survoyers.Count>0)
{

<div class="transaction-details">
    <table class="universal-table">
        <tr>
            <!-- <th>#</th> -->
                <th>
                    @_localizer["CreatedBy"].Value
                    
                </th>
                <th>
                    @_localizer["CreationDate"].Value
                    
                </th>
                <th>
                    @_localizer["EstimatedSPAmount"].Value
                    
                </th>
                <th>
                    @_localizer["EstimatedLabourAmount"].Value
                    
                </th>
                <th>
                    @_localizer["EstimatedRepairDays"].Value
                    
                </th>
                <th>
                    @_localizer["SparePartAmount"].Value
                    
                </th>
                <th>
                    @_localizer["LabourAmount"].Value
                    
                </th>
                <th>
                    @_localizer["Note"].Value
                    
                </th>
                <th>
                    @_localizer["Missing"].Value
                    
                </th>

        </tr>


        @foreach (var clm in survoyers)
        {

            <tr>
                @{
                 ClaimSearchobj   claimSearchobj = new ClaimSearchobj()
                {
                    ClaimId = clm.ClaimId,
                    ClaimantId = clm.ClaimantId,
                    SurvoyerId=clm.Id
                    
                };
                  }
                <td class="tran"><a onclick="LoadSurveyorEntry('@MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj))')">#@clm.CreatedBy</a></td>
                <td>@(Helpers.FormatLongDate( clm.CreationDate.Value))</td>
          
                <td>@clm.EstimatedSPAmount</td>
                <td>@clm.EstimatedLabourAmount</td>
                <td>@clm.EstimatedRepairDays</td>
                <td>@clm.SparePartAmount</td>
                <td>@clm.LabourAmount</td>
                <td>@clm.Note</td>
                <td class="tran"><a onclick="LoadSurveyorMissing('@MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj))')">#Check List</a></td>

            </tr>


        }
    </table>
    </div>

}else
{
   
    await Html.RenderPartialAsync("_SurveyorEntry", survoyer);
}
 @{
                 ClaimSearchobj   claimSearchobj1 = new ClaimSearchobj()
                {
                    ClaimId = ClaimId,
                    ClaimantId = ClaimantId
                    
                };
                  }

       @*           <div class="transaction-details">
                  <button type="button" class="button button-primary" onclick="LoadSurveyorEntry('@MotorClaims.Models.Helpers.Encrypt(JsonConvert.SerializeObject(claimSearchobj1))')">
                                    Add New Survey
                                </button>
                                </div>*@